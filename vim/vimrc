set nocompatible
syntax on
filetype plugin indent on


" === PLUGINS ===
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"Appearance 
Plugin 'itchyny/lightline.vim'
Plugin 'drewtempelmeyer/palenight.vim'
Plugin 'chrisbra/Colorizer'
Plugin 'ap/vim-buftabline'
"Extras
Plugin 'vimwiki/vimwiki'
Plugin 'vim-scripts/TeTrIs.vim'
"Syntax/code stuff
Plugin 'sheerun/vim-polyglot'
Plugin 'vim-jp/vim-cpp'
Plugin 'junegunn/goyo.vim'

" Track the engine.
Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
call vundle#end()            " required


" === DISPLAY SETTINGS ===
set background=dark
colorscheme palenight
set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'palenight',
      \ }


" === TEMPORARY FILES === 
" https://github.com/mhinz/vim-galore#handling-backup-swap-undo-and-viminfo-files
" create directory if needed
if !isdirectory($HOME.'/.vim/files') && exists('*mkdir')
	call mkdir($HOME.'/.vim/files')
	call mkdir($HOME.'/.vim/files/swap')
	call mkdir($HOME.'/.vim/files/backup')
	call mkdir($HOME.'/.vim/files/undo')
	call mkdir($HOME.'/.vim/files/info')
	call mkdir($HOME.'/.vim/files/info/viminfo')
endif
" backup files
set backup
set backupdir   =$HOME/.vim/files/backup/
set backupext   =-vimbackup
set backupskip  =
" swap files
set directory   =$HOME/.vim/files/swap//
set updatecount =100
" undo files
set undofile
set undodir     =$HOME/.vim/files/undo/
" viminfo files
" set viminfo     ='100,n$HOME/.vim/files/info/viminfo
set viminfo=%,<800,'10,/50,:100,h,f0,n~/.vim/files/info/.viminfo


" === BINDINGS ===
"Make ctrl backspace work as it does in other programs
noremap! <C-BS> <C-w>
noremap! <C-h> <C-w>
"Make j/k movement work normally across lines
noremap  <buffer> <silent> k gk
noremap  <buffer> <silent> j gj
noremap  <buffer> <silent> 0 g0
noremap  <buffer> <silent> $ g$
onoremap <silent> j gj
onoremap <silent> k gk
"Jump 7 lines 
nnoremap <S-j> 7gj
nnoremap <S-k> 7gk
"buffers
nnoremap <C-l> :bnext<CR>
nnoremap <C-h> :bprev<CR>
nnoremap <C-p> :b#<CR>







" === ETC ===
" Highlight current line
set cursorline
" Java stuff
autocmd Filetype java set makeprg=javac\ %
set errorformat=%A%f:%l:\ %m,%-Z%p^,%-C%.%#
" disable esc delay
set timeoutlen=1000 ttimeoutlen=0 
" set tabstop=4
" size of a hard tabstop
set tabstop=4

" always uses spaces instead of tab characters
set expandtab

" size of an "indent"
set shiftwidth=4

set incsearch

"always enable hidden buffers
set hidden

" make clipboard work in other programs
set clipboard=unnamedplus
" backspace
set backspace=indent,eol,start
" indent based on previous
"set autoindent
"set smartindent
"set cindent
" line numbers & relative linee numbers
set number
set relativenumber

